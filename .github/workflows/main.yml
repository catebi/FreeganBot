name: Deploy Bot to VPS

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  notify_start:
    runs-on: ubuntu-latest
    steps:
      - name: Notify Deployment Start
        run: |
          start_msg="üöÄ Deployment Start for: <code>${{ github.repository }}</code> on branch <code>${{ github.ref_name }}</code>%0A‚òëÔ∏èVersion: <code>${{ github.ref_name }}</code>%0A‚òëÔ∏èCommit: ${{ github.event.head_commit.message }}"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.NOTIFY_BOT_TOKEN }}/sendMessage" \
          -d "chat_id=${{ vars.IT_TELEGRAM_CHAT_ID }}&text=${start_msg}&message_thread_id=${{ vars.IT_TELEGRAM_CHAT_NOTIFY_TOPIC_ID }}&parse_mode=HTML"

  copy:
    needs: notify_start
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Copy project files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: .
          target: ~/FreeganBot

  build_deploy:
    needs: copy
    runs-on: ubuntu-latest
    steps:
      - name: Build and deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/FreeganBot
            echo "Updating .env file..."
            cat <<EOF > .env
            TELEGRAM_CHAT_SEND_TO=FREEGAN_CHAT_ACCOUNT_ID
            TELEGRAM_API_HASH=${{ secrets.TELEGRAM_API_HASH }}
            MESSAGES_COLLECTING_IS_ON=False
            DEVELOPERS=@KFears, @shion_sigma
            CHATS=https://t.me/CHAT_1
            ENV=prod
            TELEGRAM_API_ID=${{ secrets.TELEGRAM_API_ID }}
            TOPIC_ID=TOPIC_ID
            CATEBI_API_LINK=https://api.catebi.ge/api
            EOF
            echo "Pulling Docker images..."
            docker-compose down
            docker-compose up --build -d

  notify_finish:
    needs: [notify_start, copy, build_deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Notify Deployment Success
        if: success()
        run: |
          msg="‚úÖ Successful Deployment passed:%0Aü§ñ<code>${{ github.repository }}</code> at <code>${{ github.sha }}</code>%0A‚òëÔ∏èVersion: <code>${{ github.ref_name }}</code>"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.NOTIFY_BOT_TOKEN }}/sendMessage" \
          -d "chat_id=${{ vars.IT_TELEGRAM_CHAT_ID }}&text=${msg}&message_thread_id=${{ vars.IT_TELEGRAM_CHAT_NOTIFY_TOPIC_ID }}&parse_mode=HTML"

      - name: Notify Deployment Failure
        if: failure()
        run: |
          failure_msg="‚ùå Deployment Failed: Check the actions log for details.%0AView Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}%0A‚òëÔ∏èVersion: <code>${{ github.ref_name }}</code>"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.NOTIFY_BOT_TOKEN }}/sendMessage" \
          -d "chat_id=${{ vars.IT_TELEGRAM_CHAT_ID }}&text=${failure_msg}&message_thread_id=${{ vars.IT_TELEGRAM_CHAT_NOTIFY_TOPIC_ID }}&parse_mode=HTML"
